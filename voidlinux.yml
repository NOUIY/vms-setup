---
  - name: Void Linux Setup
    hosts: localhost
    connection: local
    vars_files:
      - vars/default.yml

    tasks:
      - name: Installing base system tools
        become: yes
        xbps: name={{ packages_base }} state=present

      - name: Installing editors
        become: yes
        xbps: name={{ packages_editor }} state=present

      - name: Installing devel tools
        become: yes
        xbps: name={{ packages_devel }} state=present

      - name: Installing utilities
        become: yes
        xbps: name={{ packages_utilities }} state=present

      - name: Installing productivity packages
        become: yes
        xbps: name={{ packages_productivity }} state=present

      - name: Installing sound packages
        become: yes
        xbps: name={{ packages_sound }} state=present

      - name: Installing additional programming tools
        become: yes
        xbps: name={{ packages_programming }}  state=present

      - name: Installing x11 tools
        become: yes
        xbps: name={{ packages_x11 }}  state=present

      - name: Installing desktop tools
        become: yes
        xbps: name={{ packages_desktop }} state=present

      - name: Installing fonts
        become: yes
        xbps: name={{ packages_fonts}} state=present

      - name: Installing backup tools
        become: yes
        xbps: name={{ packages_backup }} state=present

      - name: Installing security tools
        become: yes
        xbps: name={{ packages_sec }} state=present

      - name: Creating user "{{ create_user }}"
        become: yes
        ansible.builtin.user:
          name: '{{ create_user }}'
          password: "{{ create_user_password | password_hash('sha512') }}"
          state: present
          groups: wheel,audio,cdrom,floppy,input,lp,scanner,video
          append: true
          create_home: true
          skeleton: ./skel.d
          shell: /bin/oksh

      - name: Creating kshrc symlink
        become: yes
        become_user: '{{ create_user }}'
        ansible.builtin.file:
          src: '/home/{{ create_user }}/.config/shell/okshrc'
          dest: '/home/{{ create_user }}/.kshrc'
          owner: '{{ create_user }}'
          state: link

      - name: Creating dot profile symlink
        become: yes
        become_user: '{{ create_user }}'
        ansible.builtin.file:
          src: '/home/{{ create_user }}/.config/shell/profile'
          dest: '/home/{{ create_user }}/.profile'
          owner: '{{ create_user }}'
          state: link        

      - name: Creating inputrc symlink
        become: yes
        become_user: '{{ create_user }}'
        ansible.builtin.file:
          src: '/home/{{ create_user }}/.config/readline/inputrc'
          dest: '/home/{{ create_user }}/.inputrc'
          owner: '{{ create_user }}'
          state: link

      - name: Creating xsession symlink
        become: yes
        become_user: '{{ create_user }}'
        ansible.builtin.file:
          src: '/home/{{ create_user }}/.config/x11/xsessionrc'
          dest: '/home/{{ create_user }}/.xsessionrc'
          owner: '{{ create_user }}'
          mode: '700'
          state: link

      - name: Creating xsession symlink
        become: yes
        become_user: '{{ create_user }}'
        ansible.builtin.file:
          src: '/home/{{ create_user }}/.config/x11/xsession'
          dest: '/home/{{ create_user }}/.xsession'
          owner: '{{ create_user }}'
          mode: '700'
          state: link

      - name: Creating xsessions symlink
        become: yes
        become_user: '{{ create_user }}'
        ansible.builtin.file:
          src: '/home/{{ create_user }}/.config/x11/xsession'
          dest: '/home/{{ create_user }}/.xsessions'
          owner: '{{ create_user }}'
          mode: '700'
          state: link

      - name: Creating xinitrc symlink
        become: yes
        become_user: '{{ create_user }}'
        ansible.builtin.file:
          src: '/home/{{ create_user }}/.config/x11/xsession'
          dest: '/home/{{ create_user }}/.xinitrc'
          owner: '{{ create_user }}'
          mode: '700'
          state: link        

      - name: Cloning dwm customization from Github
        become: yes
        become_user: '{{ create_user }}'
        ansible.builtin.git:
          repo: '{{ github_repo_url_dwm }}'
          dest: '{{ github_repo_folder_dwm }}'

      - name: Cloning st terminal customization from Github
        become: yes
        become_user: '{{ create_user }}'
        ansible.builtin.git:
          repo: '{{ github_repo_url_st }}'
          dest: '{{ github_repo_folder_st }}'

      - name: Cloning boomer customization from Github
        become: yes
        become_user: '{{ create_user }}'
        ansible.builtin.git:
          repo: '{{ github_repo_url_boomer }}'
          dest: '{{ github_repo_folder_boomer }}'

      - name: Compiling dwm
        become: yes
        become_user: '{{ create_user }}'
        make:
          chdir: '{{ github_repo_folder_dwm }}'

      - name: Compiling st
        become: yes
        become_user: '{{ create_user }}'
        make:
          chdir: '{{ github_repo_folder_st }}'

      - name: Compiling boomer
        become: yes
        ansible.builtin.shell:
          chdir: '{{ github_repo_folder_boomer }}'
          cmd: nimble build -y

      - name: Copying custom binaries to "{{ custom_binaries_folder }}"
        become: yes
        copy: src={{ item.src }} dest={{ item.dest }} mode='a+x'
        with_items:
          - { src: '{{ github_repo_folder_dwm }}/dwm', dest: '{{ custom_binaries_folder }}/dwm' }
          - { src: '{{ github_repo_folder_st }}/st', dest: '{{ custom_binaries_folder }}/st' }
          - { src: '{{ github_repo_folder_boomer }}/boomer', dest: '{{ custom_binaries_folder }}/boomer' }

      - name: Expiring password for user "{{ create_user }}"
        command: "chage -d 0 {{ create_user }}"

      - name: Add services to startup
        ansible.builtin.shell: |
          ln -s /etc/sv/dbus /var/service/dbus
          ln -s /etc/sv/polkitd /var/service/polkitd
          ln -s /etc/sv/elogind /var/service/elogind
          ln -s /etc/sv/xdm /var/service/xdm
          
        
